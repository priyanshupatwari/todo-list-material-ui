{"version":3,"sources":["components/40-45-material-ToDoList/mouseEventHook.js","components/40-45-material-ToDoList/Head.jsx","components/40-45-material-ToDoList/index.js","App.js","index.js"],"names":["OutsideAlerter","props","setShowSearchBar","wrapperRef","useRef","ref","useEffect","handleClickOutside","event","current","contains","target","console","log","document","addEventListener","removeEventListener","useOutsideAlerter","children","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","fontWeight","marginLeft","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","filteredItems","item","classes","useState","setSearch","filter","eacItem","toLowerCase","includes","showSearchBar","className","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","onClick","InputBase","value","onChange","e","placeholder","input","inputProps","map","eachItem","index","ListItem","ListItemText","primary","secondary","date","time","ListItemIcon","Divider","id","VirtualizedList","Date","toDateString","toLocaleTimeString","editId","setEditId","setInput","setItem","TextField","label","fullWidth","multiline","rowsMax","forEach","elem","splice","editNow","prevVal","itemEdited","find","selectToEdit","newArr","deleteItem","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.262c0d8a.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nfunction useOutsideAlerter(ref, setShowSearchBar) {\n useEffect(() => {\n  /**\n   * Alert if clicked on outside of element\n   */\n  function handleClickOutside(event) {\n   if (ref.current && !ref.current.contains(event.target)) {\n    console.log(\"You clicked outside of me!\");\n    setShowSearchBar(false);\n   } else{\n    console.log(\"You clicked inside of me!\");\n    setShowSearchBar(true);\n   }\n  }\n  // Bind the event listener\n  document.addEventListener(\"mousedown\", handleClickOutside);\n\n  return () => {\n   // Unbind the event listener on clean up\n   document.removeEventListener(\"mousedown\", handleClickOutside);\n  };\n }, [ref]);\n}\n\n/**\n * Component that alerts if you click outside of it\n */\nexport function OutsideAlerter(props) {\n const { setShowSearchBar } = props;\n const wrapperRef = useRef(null);\n useOutsideAlerter(wrapperRef, setShowSearchBar);\n\n return <div ref={wrapperRef}>{props.children}</div>;\n}","import React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { alpha, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { ListItem, ListItemText, Divider, TextField, ListItemIcon } from '@material-ui/core';\nimport { OutsideAlerter } from './mouseEventHook';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    fontWeight: 700,\n    marginLeft: '3rem',\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nexport default function SearchAppBar({ item }) {\n  const classes = useStyles();\n  const [search, setSearch] = useState('');\n  let filteredItems;\n  if (search) {\n    filteredItems = item.filter((eacItem) => {\n      return eacItem.title.toLowerCase().includes(search.toLowerCase())\n    });\n  } else {\n    filteredItems = [];\n  }\n  console.log(search);\n  const [showSearchBar, setShowSearchBar] = useState(false)\n  console.log(showSearchBar);\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            To Do List\n          </Typography>\n          <div\n            className={classes.search}\n            onClick={() => setShowSearchBar(!showSearchBar)}\n          >\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              value={search}\n              onChange={(e) => setSearch(e.target.value)}\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n\n      <OutsideAlerter setShowSearchBar={setShowSearchBar}>\n        <div className={`searchResultBar ${showSearchBar ? 'show' : 'hide'}`}\n        >\n          <div className='searchHeading'>\n            <div > Search result </div>\n            <span className='searchText wordBreak'> {search}</span>\n          </div>\n\n          {filteredItems &&\n            filteredItems.map((eachItem, index) => {\n              return (<div key={index}>\n                <ListItem >\n                  <ListItemText primary={eachItem.title} secondary={eachItem.date + \" at \" + eachItem.time} className='wordBreak' />\n                  <ListItemIcon>\n                    {/* <span className=\"myBtn myBtn-primary\"\n                      onClick={() => selectToEdit(eachItem.id)}  ><EditIcon /></span> */}\n                  </ListItemIcon>\n                  <ListItemIcon>\n                    {/* <span className=\"myBtn\"\n                      onClick={() => deleteItem(eachItem.id)}  ><DeleteForeverIcon /></span> */}\n                  </ListItemIcon>\n                </ListItem>\n                <Divider />\n              </div>)\n            }\n            )}\n        </div>\n      </OutsideAlerter>\n\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { ListItem, ListItemText, Divider, TextField, ListItemIcon } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport EditIcon from '@material-ui/icons/Edit';\nimport './index.css'\nimport Head from './Head';\n\nlet id = 0;\nexport default function VirtualizedList() {\n  const date = new Date().toDateString();\n  const time = new Date().toLocaleTimeString();\n  \n  const [editId, setEditId] = useState(null)\n  const [input, setInput] = useState('');\n  const [item, setItem] = useState([{\n    id: 'x',\n    title: 'this is your title',\n    date: 'date',\n    time: 'time',\n  }]);\n\n  function addItem() {\n    id++;\n    setItem((prevVal) => {\n      return [...prevVal, { id: id, title: input, date: date, time: time }]\n    })\n  }\n  function deleteItem(id) {\n    const newArr = item.filter((elem) => elem.id !== id);\n    setItem(newArr);\n  }\n  function selectToEdit(id) {\n    const itemEdited = item.find((elem) => elem.id === id);\n    setInput(itemEdited.title)\n    setEditId(id);\n  }\n  function editNow(editId) {\n    if (editId || editId === 0) {\n      item.forEach((elem, index) => {\n        if (elem.id === editId) {\n          item.splice(index, 1, { id: editId, title: input, date: date, time: time })\n        }\n      })\n    }\n    setEditId(null);\n  }\n\n  return (\n    <div>\n      <Head item={item} />\n      <div className='main-container'>\n        <div className=\"container\">\n          <div className=\"inputGroup\">\n            <div className=\"input-field\">\n              <TextField\n                id=\"standard-multiline-flexible\"\n                label=\"Your notes\"\n                fullWidth\n                multiline\n                rowsMax={4}\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n              />\n            </div>\n            <div className=\"leftSide\">\n              {\n                editId && <span className=\"myBtn myBtn-primary\" onClick={() => { editNow(editId); setInput('') }} ><EditIcon /></span>\n              }\n              {\n                (input && !editId) ? <>\n                  <span className='myBtn myBtn-primary' onClick={() => { addItem(); setInput('') }}><AddIcon /></span>\n                  <span className='myBtn' onClick={() => setInput('')}><ClearIcon /></span>\n                </> : ''\n              }\n            </div>\n          </div>\n          <div className=\"ListItem\">\n            {item.map((eachItem, index) => {\n              return (<div key={index}>\n                <ListItem >\n                  <ListItemText primary={eachItem.title} secondary={eachItem.date + \" at \" + eachItem.time} className='wordBreak' />\n                  <ListItemIcon>\n                    <span className=\"myBtn myBtn-primary\"\n                      onClick={() => selectToEdit(eachItem.id)}  ><EditIcon /></span>\n                  </ListItemIcon>\n                  <ListItemIcon>\n                    <span className=\"myBtn\"\n                      onClick={() => deleteItem(eachItem.id)}  ><DeleteForeverIcon /></span>\n                  </ListItemIcon>\n                </ListItem>\n                <Divider />\n              </div>)\n            }\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\n\nimport ToDoMaterial from './components/40-45-material-ToDoList'\n\nfunction App() {\n  return (\n    <>\n   \n      <ToDoMaterial/>\n\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App.js\";\nReactDOM.render(\n  <>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}